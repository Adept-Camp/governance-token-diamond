{
  "contractName": "GovernanceTokenDiamond",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes[]",
          "name": "_diamondCut",
          "type": "bytes[]"
        }
      ],
      "name": "DiamondCut",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.0+commit.9e61f92b\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"_diamondCut\",\"type\":\"bytes[]\"}],\"name\":\"DiamondCut\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Users/mudge/projects/governance-token-diamond/contracts/GovernanceTokenDiamond.sol\":\"GovernanceTokenDiamond\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/mudge/projects/governance-token-diamond/contracts/GovernanceTokenDiamond.sol\":{\"keccak256\":\"0x56d66730a06016138507ccaab74f2dd800e77ac0bf296d37e2e1eec2c2949394\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://313af41435907266fb48e257debd6774a505235167d7c4900aabb136eef2fa07\",\"dweb:/ipfs/QmdNU8HKt65sTLz2GBGXQjmYYMXfGAFFB87aLNKdcPbj48\"]},\"/C/Users/mudge/projects/governance-token-diamond/contracts/facets/DiamondLoupe.sol\":{\"keccak256\":\"0x8770be55d568cade57caa758b760bdbb1f52f468a5277b904a84ee73296ce3c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c74a962f470ff41f44f668799ec2e62594a36faa45c3aee33ef38043db5ebd97\",\"dweb:/ipfs/QmVvAmy1LQicR3nZMvd9417jsGSuCd58H1mUsnpFbYcFy3\"]},\"/C/Users/mudge/projects/governance-token-diamond/contracts/facets/ERC20Token.sol\":{\"keccak256\":\"0x6fb28852803dd6109e5103d0592f9cd7a05cfacbeccc869c604ad99bddfa8e71\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec5f47c213563247ab728681dea0c85d4b717d9258de4e7644900640df8ff815\",\"dweb:/ipfs/QmSf1WkiMQbLGatigf3kajF8ssvye25aboPw4HFr3jCiGK\"]},\"/C/Users/mudge/projects/governance-token-diamond/contracts/facets/Governance.sol\":{\"keccak256\":\"0x7177e6bb8f9be1abaeffe4d495ce78185733e580ec368bff058fc358f74af379\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61d77e266603b0a4f90cdccd366cd92a7e39b82ea8349f76f80392fd7c74ebc7\",\"dweb:/ipfs/QmVRh3dBFqNYSNBkU3urrkPeBMpS6Qh5PcCNY5yPpPaBRg\"]},\"/C/Users/mudge/projects/governance-token-diamond/contracts/interfaces/IDiamondLoupe.sol\":{\"keccak256\":\"0x85256f57d649b2be9b6c86c0767350a7061cd03f7c4201fae995afd662e9fd3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3bb0186c72fc7c2e8c9b6315794c80f3b05fba83a140258182ddd22566fa708\",\"dweb:/ipfs/QmV1xdy4A1xbruaiSe7bguerwWjQ39GqqVspYMNxiN7XgG\"]},\"/C/Users/mudge/projects/governance-token-diamond/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x1a283e8024033e99ef8a030e69d491f1a405c2d7475973a861337adf7d8f36c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c65ae37400a305a88458716a61b55132166a845732f5769aee92166e1c5ad864\",\"dweb:/ipfs/Qmcjyu3dMKyKS5YLKq1aRCUcRBLpaaY4K5WeM7y6KRBe4i\"]},\"/C/Users/mudge/projects/governance-token-diamond/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xd904b12b5b0779bc0f54d6901004db16572d4e8b2973d03083f166f552beb308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eafa8186d809141e5d105bf17874fe4db14f22a4be2774644dd5982794cc8d82\",\"dweb:/ipfs/QmQ8sd2uXprx3Pruw9LFy6wb7AAsCtE6NARGas3HmviL8e\"]},\"/C/Users/mudge/projects/governance-token-diamond/contracts/lib/Diamond.sol\":{\"keccak256\":\"0x14c1106bd852838356738de87ee98ae20f60d23751976631ccdd242aa2b8a1bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36e730ba296555a17b6b6a4d0bf724eec4136128646ea1afd23e97b8836e5717\",\"dweb:/ipfs/QmTVUY6t8j9Tc31k5FAie7tvf9Asu6bYNcYpVb2WTJJ9TC\"]},\"/C/Users/mudge/projects/governance-token-diamond/contracts/lib/InternalFunctions.sol\":{\"keccak256\":\"0x630cde00d8e6b20809c1c6b3af5d27a6d55ca4dbacda36e35b1c1ad0cfc5f260\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e23c1415a4d117548faeed3ba57fec38995e1462264aa70808f7e0438b98c20b\",\"dweb:/ipfs/QmQpcyxqmWuyMo2EeykTssudmEyh13qt4WyJdJVgi18z1a\"]},\"/C/Users/mudge/projects/governance-token-diamond/contracts/storage/DiamondStorageContract.sol\":{\"keccak256\":\"0xbaf5a75c4ed6bf00b8dcb057df7c9b7b9026e9bf9f91368da5d751921263943b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://299dc3f249f279fb37de3108b56454c79dbf10f7c53e870fa5e07f7097afca00\",\"dweb:/ipfs/QmNRKtkTM6PZvA9Spu2qdfYKrCz7DkM1FRjy9ofV7pow2K\"]},\"/C/Users/mudge/projects/governance-token-diamond/contracts/storage/ERC20TokenStorageContract.sol\":{\"keccak256\":\"0xb67135aa3b45c05e822741b7424a1f85dd94414bfd47afe5941df037994fe4bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dadcae7e37ca9cbceff7bf761db1441884b2ae281616452fde175be36b7dffe2\",\"dweb:/ipfs/QmYe6kMtiUFJ9qBh58RAwUbFqou624uiZU7n6KJBGHRudt\"]},\"/C/Users/mudge/projects/governance-token-diamond/contracts/storage/GovernanceStorageContract.sol\":{\"keccak256\":\"0xf69a43858e2038cf7e26f450e9aafd4e566946fc791d680c8029ff775feb639c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b48e0e01aeeb118a888b2a8086a6e278d4cbc079160330727ccb9847b3606746\",\"dweb:/ipfs/QmcVQ9cVktu4oxi1Xt6ejDEzAJUmF4y564LhU3shVbHe6x\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x60806040523661000b57005b6000807fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c9050809150600082600101600080357fffffffff00000000000000000000000000000000000000000000000000000000167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019081526020016000205460601c9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610122576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161011990610189565b60405180910390fd5b60405136600082376000803683855af43d806000843e8160008114610145578184f35b8184fd5b60006101566018836101a9565b91507f46756e6374696f6e20646f6573206e6f742065786973742e00000000000000006000830152602082019050919050565b600060208201905081810360008301526101a281610149565b9050919050565b60008282526020820190509291505056fea26469706673582212206b6827fff1eefa95607cddadabbf65239ed7b81b4b3b0ca515c9fdaa41cfb7f064736f6c63430007000033",
  "immutableReferences": {},
  "sourceMap": "824:4196:0:-:0;;;892:3221;;;;;;;;;;918:29;958:28;990:24;:22;;;:24;;:::i;:::-;917:97;;;;1120:14;1099:3;:18;;;:35;;;;;;;;;;;;;;;;;;1243:2;1224;:16;;;:21;;;;;;;;;;;;;;;;;;1363:3;1333:2;:27;;;:33;;;;;;;;;;;;;;;;;;1495:2;1469;:23;;;:28;;;;;;;;;;;;;;;;;;1620:3;1597:2;:20;;;:26;;;;;;;;;;;;;;;;;;1809:2;1784;:22;;;:27;;;;;;;;;;;;;;;;;;1910:2;1887;:20;;;:25;;;;;;;;;;;;;;;;;;2026:3;2003:2;:20;;;:26;;;;;;;;;;;;;;;;;;2135:25;2163:18;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;2135:46;;2195:21;2219:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;2195:40;;2246:21;2270:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;2246:40;;2299:18;2332:1;2320:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2299:35;;2454:12;2481:45;;;2541:29;;;2585:35;;;2635:37;;;2687:34;;;2423:321;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2414:3;2418:1;2414:6;;;;;;;;;;;;;:330;;;;2797:10;2822:24;;;2861:26;;;2902:28;;;2945:31;;;2991:29;;;3035:28;;;3078:32;;;3125:27;;;3167:29;;;3211:37;;;3263;;;2766:545;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2757:3;2761:1;2757:6;;;;;;;;;;;;;:554;;;;3364:10;3389:27;;;3431:35;;;3481:34;;;3530:28;;;3573:24;;;3612:26;;;3333:316;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3324:3;3328:1;3324:6;;;;;;;;;;;;;:325;;;;3670:15;3681:3;3670:10;;;:15;;:::i;:::-;3737:25;3765:16;:14;;;:16;;:::i;:::-;3737:44;;3853:4;3792:2;:22;;:58;3815:34;;;3792:58;;;;;;;;;;;;;;;;;;:65;;;;;;;;;;;;;;;;;;3876:18;4017:35;;;3977:37;;;3929:45;;;3897:29;;;:77;:117;:155;3876:176;;4101:4;4063:2;:22;;:35;4086:11;4063:35;;;;;;;;;;;;;;;;;;:42;;;;;;;;;;;;;;;;;;892:3221;;;;;;;;824:4196;;412:350:10;478:29;519:28;566:16;171:48:12;566:46:10;;646:8;634:20;;171:48:13;666:38:10;;737:8;726:19;;724:23;;;:::o;1297:5670:9:-;1365:25;1393:16;:14;;;:16;;:::i;:::-;1365:44;;1420:20;;:::i;:::-;1486:2;:22;;;1451:4;:32;;:57;;;;;1519:24;1554:4;:32;;;1519:68;;;;1598:23;1668:3;1632:4;:32;;;:39;;1598:74;;;;1707:1;1686:18;:22;1683:111;;;1745:2;:16;;:37;1762:19;1745:37;;;;;;;;;;;;1725:4;:17;;:57;;;;;1683:111;1845:20;1841:4690;1885:11;:18;1867:15;:36;1841:4690;;;1939:21;1963:11;1975:15;1963:28;;;;;;;;;;;;;;1939:52;;2032:2;2014:8;:15;:20;2006:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;2085:19;2181:2;2172:8;2168:16;2162:23;2147:38;;2214:16;2241:11;2214:39;;;;;2268:17;2313:1;2307:2;2289:8;:15;:20;2288:26;;;;;;2268:46;;2329:13;2345:2;2329:18;;2437:1;2425:13;;:8;:13;2422:4098;;2509:18;2505:1538;2545:12;2529:13;:28;2505:1538;;;2599:15;2704:8;2695;2691:22;2685:29;2673:41;;2771:1;2759:13;;;;2795:16;2814:2;:9;;:19;2824:8;2814:19;;;;;;;;;;;;;;;;;;2795:38;;2899:1;2887:13;;:8;:13;2884:1140;;;3006:19;2998:28;;2993:2;2970:18;2962:27;;:33;;2951:8;:44;:75;2929:2;:9;;:19;2939:8;2929:19;;;;;;;;;;;;;;;;;:97;;;;3187:2;3166:18;:23;3153:8;3145:17;;;:44;;3139:2;3118:18;:23;732:66;3095:19;;:46;;3093:49;3073:4;:17;;;:69;:116;3053:4;:17;;:136;;;;;3216:20;;;;;;;3288:1;3266:18;:23;3263:461;;;3362:4;:17;;;3322:2;:16;;:37;3339:19;3322:37;;;;;;;;;;;:57;;;;3430:1;3410:21;;:4;:17;;:21;;;;;3483:1;3462:22;;3515:21;;;;;;;3582:5;3567:4;:12;;:20;;;;;;;;;;;3263:461;;;3692:4;3677;:12;;:19;;;;;;;;;;;3263:461;2884:1140;;;3870:8;3841:38;;;3849:8;3841:38;;;;;3833:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;3992:8;620:66;3971:18;;3960:8;:29;:40;3938:2;:9;;:19;3948:8;3938:19;;;;;;;;;;;;;;;;;:62;;;;2884:1140;2505:1538;;2559:15;;;;;;;2505:1538;;;;2422:4098;;;4133:18;4129:2376;4169:12;4153:13;:28;4129:2376;;;4223:15;4328:8;4319;4315:22;4309:29;4297:41;;4395:1;4383:13;;;;4419:16;4438:2;:9;;:19;4448:8;4438:19;;;;;;;;;;;;;;;;;;4419:38;;4500:1;4488:13;;:8;:13;;4480:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;4590:1;4569:22;;:4;:17;;;:22;4566:232;;;4620:21;;;;;;;;4688:2;:16;;:37;4705:19;4688:37;;;;;;;;;;;;4668:4;:17;;:57;;;;;4773:1;4752:22;;4566:232;4861:8;4856:14;;4820:51;;:4;:26;;:51;;;;;4946:2;4934:8;:14;;4929:20;;4894:56;;:4;:25;;:56;;;;;4973:19;5048:2;5043:1;5024:18;:20;5023:27;5002:4;:17;;;:48;;4973:78;;5107:19;5077:4;:26;;;:49;5074:907;;5178:2;:16;;:44;5195:4;:26;;;5178:44;;;;;;;;;;;;5155:4;:20;;:67;;;;;5435:2;5407:4;:25;;;:30;5390:12;5382:21;;;:55;;5376:2;5348:4;:25;;;:30;732:66;5325:19;;:53;;5323:56;5300:4;:20;;;:79;:137;5277:4;:20;;:160;;;;;5559:4;:20;;;5512:2;:16;;:44;5529:4;:26;;;5512:44;;;;;;;;;;;:67;;;;5630:20;;;;;;;;5074:907;;;5908:2;5880:4;:25;;;:30;5863:12;5855:21;;;:55;;5849:2;5821:4;:25;;;:30;732:66;5798:19;;:53;;5796:56;5776:4;:17;;;:76;:134;5756:4;:17;;:154;;;;;5937:20;;;;;;;;5074:907;6028:1;6006:18;:23;6003:219;;;6065:2;:16;;:37;6082:19;6065:37;;;;;;;;;;;6058:44;;;6197:1;6177:21;;:4;:17;;:21;;;;;6003:219;6263:8;6247:24;;;:12;:24;;;;6244:193;;6388:2;:9;;:23;6398:12;6388:23;;;;;;;;;;;;;;;;;;6348:64;;;620:66;6359:18;;6348:8;:29;:64;6322:2;:9;;:23;6332:12;6322:23;;;;;;;;;;;;;;;;;:90;;;;6244:193;6466:2;:9;;:19;6476:8;6466:19;;;;;;;;;;;;;;;;;6459:26;;;4129:2376;;;4183:15;;;;;;;4129:2376;;;;2422:4098;1841:4690;;;;;1905:17;;;;;;;1841:4690;;;;6541:27;6599:19;6593:3;6571:18;:25;;:47;6541:77;;6658:4;:32;;;6632:22;:58;6629:149;;6732:22;6707:2;:22;;:47;;;;6629:149;6799:4;:12;;;6796:125;;;6868:4;:17;;;6828:2;:16;;:37;6845:19;6828:37;;;;;;;;;;;:57;;;;6796:125;6936:23;6947:11;6936:23;;;;;;:::i;:::-;;;;;;;;1297:5670;;;;;;:::o;1190:179:11:-;1238:25;1276:16;145:45;1276:43;;1352:8;1341:19;;1339:23;;:::o;824:4196:0:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6:189:-1:-;;125:64;185:3;177:6;125:64;:::i;:::-;111:78;;104:91;;;;:::o;230:920::-;;393:63;450:5;393:63;:::i;:::-;469:95;557:6;552:3;469:95;:::i;:::-;462:102;;587:3;629:4;621:6;617:17;612:3;608:27;656:65;715:5;656:65;:::i;:::-;741:7;769:1;754:357;779:6;776:1;773:13;754:357;;;841:9;835:4;831:20;826:3;819:33;886:6;880:13;908:82;985:4;970:13;908:82;:::i;:::-;900:90;;1007:69;1069:6;1007:69;:::i;:::-;997:79;;1099:4;1094:3;1090:14;1083:21;;811:300;801:1;798;794:9;789:14;;754:357;;;758:14;1124:4;1117:11;;1141:3;1134:10;;372:778;;;;;;;;;:::o;1158:148::-;1257:43;1276:23;1293:5;1276:23;:::i;:::-;1257:43;:::i;:::-;1252:3;1245:56;1239:67;;:::o;1313:323::-;;1413:38;1445:5;1413:38;:::i;:::-;1463:60;1516:6;1511:3;1463:60;:::i;:::-;1456:67;;1528:52;1573:6;1568:3;1561:4;1554:5;1550:16;1528:52;:::i;:::-;1601:29;1623:6;1601:29;:::i;:::-;1596:3;1592:39;1585:46;;1393:243;;;;;:::o;1643:207::-;1765:79;1785:58;1837:5;1785:58;:::i;:::-;1765:79;:::i;:::-;1760:3;1753:92;1747:103;;:::o;1857:203::-;1977:77;1997:56;2047:5;1997:56;:::i;:::-;1977:77;:::i;:::-;1972:3;1965:90;1959:101;;:::o;2067:203::-;2187:77;2207:56;2257:5;2207:56;:::i;:::-;2187:77;:::i;:::-;2182:3;2175:90;2169:101;;:::o;2278:374::-;;2438:67;2502:2;2497:3;2438:67;:::i;:::-;2431:74;;2538:34;2534:1;2529:3;2525:11;2518:55;2607:7;2602:2;2597:3;2593:12;2586:29;2643:2;2638:3;2634:12;2627:19;;2424:228;;;:::o;2661:331::-;;2821:67;2885:2;2880:3;2821:67;:::i;:::-;2814:74;;2921:33;2917:1;2912:3;2908:11;2901:54;2983:2;2978:3;2974:12;2967:19;;2807:185;;;:::o;3001:327::-;;3161:67;3225:2;3220:3;3161:67;:::i;:::-;3154:74;;3261:29;3257:1;3252:3;3248:11;3241:50;3319:2;3314:3;3310:12;3303:19;;3147:181;;;:::o;3336:965::-;;3615:96;3707:3;3698:6;3615:96;:::i;:::-;3733:2;3728:3;3724:12;3717:19;;3747:73;3816:3;3807:6;3747:73;:::i;:::-;3842:1;3837:3;3833:11;3826:18;;3855:73;3924:3;3915:6;3855:73;:::i;:::-;3950:1;3945:3;3941:11;3934:18;;3963:73;4032:3;4023:6;3963:73;:::i;:::-;4058:1;4053:3;4049:11;4042:18;;4071:73;4140:3;4131:6;4071:73;:::i;:::-;4166:1;4161:3;4157:11;4150:18;;4179:73;4248:3;4239:6;4179:73;:::i;:::-;4274:1;4269:3;4265:11;4258:18;;4293:3;4286:10;;3603:698;;;;;;;;;:::o;4308:1769::-;;4743:94;4833:3;4824:6;4743:94;:::i;:::-;4859:2;4854:3;4850:12;4843:19;;4873:73;4942:3;4933:6;4873:73;:::i;:::-;4968:1;4963:3;4959:11;4952:18;;4981:73;5050:3;5041:6;4981:73;:::i;:::-;5076:1;5071:3;5067:11;5060:18;;5089:73;5158:3;5149:6;5089:73;:::i;:::-;5184:1;5179:3;5175:11;5168:18;;5197:73;5266:3;5257:6;5197:73;:::i;:::-;5292:1;5287:3;5283:11;5276:18;;5305:73;5374:3;5365:6;5305:73;:::i;:::-;5400:1;5395:3;5391:11;5384:18;;5413:73;5482:3;5473:6;5413:73;:::i;:::-;5508:1;5503:3;5499:11;5492:18;;5521:73;5590:3;5581:6;5521:73;:::i;:::-;5616:1;5611:3;5607:11;5600:18;;5629:73;5698:3;5689:6;5629:73;:::i;:::-;5724:1;5719:3;5715:11;5708:18;;5737:73;5806:3;5797:6;5737:73;:::i;:::-;5832:1;5827:3;5823:11;5816:18;;5845:74;5915:3;5905:7;5845:74;:::i;:::-;5941:1;5936:3;5932:11;5925:18;;5954:74;6024:3;6014:7;5954:74;:::i;:::-;6050:1;6045:3;6041:11;6034:18;;6069:3;6062:10;;4731:1346;;;;;;;;;;;;;;;:::o;6084:1095::-;;6387:94;6477:3;6468:6;6387:94;:::i;:::-;6503:2;6498:3;6494:12;6487:19;;6517:73;6586:3;6577:6;6517:73;:::i;:::-;6612:1;6607:3;6603:11;6596:18;;6625:73;6694:3;6685:6;6625:73;:::i;:::-;6720:1;6715:3;6711:11;6704:18;;6733:73;6802:3;6793:6;6733:73;:::i;:::-;6828:1;6823:3;6819:11;6812:18;;6841:73;6910:3;6901:6;6841:73;:::i;:::-;6936:1;6931:3;6927:11;6920:18;;6949:73;7018:3;7009:6;6949:73;:::i;:::-;7044:1;7039:3;7035:11;7028:18;;7057:73;7126:3;7117:6;7057:73;:::i;:::-;7152:1;7147:3;7143:11;7136:18;;7171:3;7164:10;;6375:804;;;;;;;;;;:::o;7186:406::-;;7381:2;7370:9;7366:18;7358:26;;7431:9;7425:4;7421:20;7417:1;7406:9;7402:17;7395:47;7456:126;7577:4;7568:6;7456:126;:::i;:::-;7448:134;;7352:240;;;;:::o;7599:416::-;;7799:2;7788:9;7784:18;7776:26;;7849:9;7843:4;7839:20;7835:1;7824:9;7820:17;7813:47;7874:131;8000:4;7874:131;:::i;:::-;7866:139;;7770:245;;;:::o;8022:416::-;;8222:2;8211:9;8207:18;8199:26;;8272:9;8266:4;8262:20;8258:1;8247:9;8243:17;8236:47;8297:131;8423:4;8297:131;:::i;:::-;8289:139;;8193:245;;;:::o;8445:416::-;;8645:2;8634:9;8630:18;8622:26;;8695:9;8689:4;8685:20;8681:1;8670:9;8666:17;8659:47;8720:131;8846:4;8720:131;:::i;:::-;8712:139;;8616:245;;;:::o;8868:160::-;;8963:3;8955:11;;9001:4;8996:3;8992:14;8984:22;;8949:79;;;:::o;9035:146::-;;9153:5;9147:12;9137:22;;9118:63;;;:::o;9188:121::-;;9281:5;9275:12;9265:22;;9246:63;;;:::o;9316:117::-;;9423:4;9418:3;9414:14;9406:22;;9400:33;;;:::o;9441:187::-;;9580:6;9575:3;9568:19;9617:4;9612:3;9608:14;9593:29;;9561:67;;;;:::o;9637:152::-;;9741:6;9736:3;9729:19;9778:4;9773:3;9769:14;9754:29;;9722:67;;;;:::o;9798:163::-;;9913:6;9908:3;9901:19;9950:4;9945:3;9941:14;9926:29;;9894:67;;;;:::o;9969:144::-;;10041:66;10034:5;10030:78;10019:89;;10013:100;;;:::o;10120:121::-;;10193:42;10186:5;10182:54;10171:65;;10165:76;;;:::o;10248:163::-;;10348:58;10400:5;10348:58;:::i;:::-;10335:71;;10329:82;;;:::o;10418:129::-;;10518:24;10536:5;10518:24;:::i;:::-;10505:37;;10499:48;;;:::o;10554:159::-;;10652:56;10702:5;10652:56;:::i;:::-;10639:69;;10633:80;;;:::o;10720:127::-;;10818:24;10836:5;10818:24;:::i;:::-;10805:37;;10799:48;;;:::o;10854:159::-;;10952:56;11002:5;10952:56;:::i;:::-;10939:69;;10933:80;;;:::o;11020:127::-;;11118:24;11136:5;11118:24;:::i;:::-;11105:37;;11099:48;;;:::o;11155:268::-;11220:1;11227:101;11241:6;11238:1;11235:13;11227:101;;;11317:1;11312:3;11308:11;11302:18;11298:1;11293:3;11289:11;11282:39;11263:2;11260:1;11256:10;11251:15;;11227:101;;;11343:6;11340:1;11337:13;11334:2;;;11408:1;11399:6;11394:3;11390:16;11383:27;11334:2;11204:219;;;;:::o;11431:95::-;;11495:26;11515:5;11495:26;:::i;:::-;11484:37;;11478:48;;;:::o;11533:73::-;;11596:5;11585:16;;11579:27;;;:::o;11613:89::-;;11677:20;11691:5;11677:20;:::i;:::-;11666:31;;11660:42;;;:::o;11709:97::-;;11797:2;11793:7;11788:2;11781:5;11777:14;11773:28;11763:38;;11757:49;;;:::o;11814:94::-;;11892:5;11888:2;11884:14;11862:36;;11856:52;;;:::o;824:4196:0:-;;;;;;;",
  "deployedSourceMap": "824:4196:0:-:0;;;;;;;;4290:25;4326:16;145:45:11;4326:66:0;;4436:8;4425:19;;4456:13;4488:2;:9;;:18;4498:7;;;;4488:18;;;;;;;;;;;;;;;;;;4472:36;;4456:52;;4544:1;4527:19;;:5;:19;;;;4519:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;4627:4;4621:11;4667:14;4664:1;4659:3;4646:36;4761:1;4758;4742:14;4737:3;4730:5;4723;4710:53;4789:16;4842:4;4839:1;4834:3;4819:28;4868:6;4893:1;4888:26;;;;4950:4;4945:3;4937:18;4888:26;4908:4;4903:3;4896:17;6:324:-1;;166:67;230:2;225:3;166:67;:::i;:::-;159:74;;266:26;262:1;257:3;253:11;246:47;321:2;316:3;312:12;305:19;;152:178;;;:::o;338:416::-;;538:2;527:9;523:18;515:26;;588:9;582:4;578:20;574:1;563:9;559:17;552:47;613:131;739:4;613:131;:::i;:::-;605:139;;509:245;;;:::o;762:163::-;;877:6;872:3;865:19;914:4;909:3;905:14;890:29;;858:67;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.7.0;\r\npragma experimental ABIEncoderV2;\r\n/******************************************************************************\\\r\n* Author: Nick Mudge\r\n*\r\n* Implementation of an ERC20 governance token that can govern itself and a project\r\n* using the Diamond Standard.\r\n/******************************************************************************/\r\n\r\nimport { InternalFunctions } from './lib/InternalFunctions.sol';\r\nimport { IDiamondLoupe } from './interfaces/IDiamondLoupe.sol';\r\nimport { IERC165 } from './interfaces/IERC165.sol';\r\nimport { DiamondLoupe } from './facets/DiamondLoupe.sol';\r\nimport { Diamond, DiamondStorageContract } from './lib/Diamond.sol';\r\nimport { ERC20Token } from './facets/ERC20Token.sol';\r\nimport { Governance } from './facets/Governance.sol';\r\n\r\ncontract GovernanceTokenDiamond is InternalFunctions {  \r\n    \r\n    constructor() {\r\n        (ERC20TokenStorage storage ets,\r\n        GovernanceStorage storage gs) = governanceTokenStorage();\r\n        // Set total supply cap. The token supply cannot grow past this.\r\n        ets.totalSupplyCap = 100_000_000e18;\r\n        // Require 5 percent of governance token for votes to pass a proposal\r\n        gs.quorumDivisor = 20;\r\n        // Proposers must own 1 percent of totalSupply to submit a proposal\r\n        gs.proposalThresholdDivisor = 100;\r\n        // Proposers get an additional 5 percent of their balance if their proposal passes\r\n        gs.proposerAwardDivisor = 20;\r\n        // Voters get an additional 1 percent of their balance for voting on a proposal\r\n        gs.voterAwardDivisor = 100;\r\n        // Cap voter and proposer balance used to generate awards at 5 percent of totalSupply\r\n        // This is to help prevent too much inflation\r\n        gs.voteAwardCapDivisor = 20;\r\n        // Proposals must have at least 48 hours of voting time\r\n        gs.minimumVotingTime = 48;\r\n        // Proposals must have no more than 336 hours (14 days) of voting time\r\n        gs.maximumVotingTime = 336;\r\n\r\n        // Create a DiamondLoupeFacet contract which implements the Diamond Loupe interface\r\n        DiamondLoupe diamondLoupe = new DiamondLoupe();   \r\n        ERC20Token erc20Token = new ERC20Token();\r\n        Governance governance = new Governance();\r\n\r\n        bytes[] memory cut = new bytes[](3);\r\n        \r\n        // Adding diamond loupe functions                \r\n        cut[0] = abi.encodePacked(\r\n            diamondLoupe,\r\n            IDiamondLoupe.facetFunctionSelectors.selector,\r\n            IDiamondLoupe.facets.selector,\r\n            IDiamondLoupe.facetAddress.selector,\r\n            IDiamondLoupe.facetAddresses.selector,\r\n            IERC165.supportsInterface.selector            \r\n        );\r\n\r\n        cut[1] = abi.encodePacked(\r\n            erc20Token,\r\n            ERC20Token.name.selector,\r\n            ERC20Token.symbol.selector,\r\n            ERC20Token.decimals.selector,\r\n            ERC20Token.totalSupply.selector,\r\n            ERC20Token.balanceOf.selector,\r\n            ERC20Token.transfer.selector,\r\n            ERC20Token.transferFrom.selector,\r\n            ERC20Token.approve.selector,\r\n            ERC20Token.allowance.selector,\r\n            ERC20Token.increaseAllowance.selector,\r\n            ERC20Token.decreaseAllowance.selector\r\n        );\r\n\r\n        cut[2] = abi.encodePacked(\r\n            governance,\r\n            Governance.propose.selector,\r\n            Governance.executeProposal.selector,\r\n            Governance.proposalStatus.selector,\r\n            Governance.proposal.selector,\r\n            Governance.vote.selector,\r\n            Governance.unvote.selector\r\n        );\r\n        \r\n        diamondCut(cut);\r\n        \r\n        // adding ERC165 data\r\n        DiamondStorage storage ds = diamondStorage();\r\n        ds.supportedInterfaces[IERC165.supportsInterface.selector] = true;        \r\n        bytes4 interfaceID = IDiamondLoupe.facets.selector ^ IDiamondLoupe.facetFunctionSelectors.selector ^ IDiamondLoupe.facetAddresses.selector ^ IDiamondLoupe.facetAddress.selector;\r\n        ds.supportedInterfaces[interfaceID] = true;\r\n    }  \r\n\r\n    // Finds facet for function that is called and executes the\r\n    // function if it is found and returns any value.\r\n    fallback() external payable {        \r\n        DiamondStorage storage ds;\r\n        bytes32 position = DiamondStorageContract.DIAMOND_STORAGE_POSITION;           \r\n        assembly { ds.slot := position }\r\n        address facet = address(bytes20(ds.facets[msg.sig]));\r\n        require(facet != address(0), \"Function does not exist.\");\r\n        assembly {\r\n            let ptr := mload(0x40)\r\n            calldatacopy(ptr, 0, calldatasize())\r\n            let result := delegatecall(gas(), facet, ptr, calldatasize(), 0, 0)\r\n            let size := returndatasize()\r\n            returndatacopy(ptr, 0, size)\r\n            switch result\r\n            case 0 {revert(ptr, size)}\r\n            default {return (ptr, size)}\r\n        }\r\n    }\r\n\r\n    receive() external payable {\r\n    }\r\n}\r\n  ",
  "sourcePath": "C:\\Users\\mudge\\projects\\governance-token-diamond\\contracts\\GovernanceTokenDiamond.sol",
  "ast": {
    "absolutePath": "/C/Users/mudge/projects/governance-token-diamond/contracts/GovernanceTokenDiamond.sol",
    "exportedSymbols": {
      "GovernanceTokenDiamond": [
        288
      ]
    },
    "id": 289,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "58:33:0"
      },
      {
        "absolutePath": "/C/Users/mudge/projects/governance-token-diamond/contracts/lib/InternalFunctions.sol",
        "file": "./lib/InternalFunctions.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 289,
        "sourceUnit": 3536,
        "src": "399:64:0",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 3,
              "name": "InternalFunctions",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "408:17:0",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/mudge/projects/governance-token-diamond/contracts/interfaces/IDiamondLoupe.sol",
        "file": "./interfaces/IDiamondLoupe.sol",
        "id": 6,
        "nodeType": "ImportDirective",
        "scope": 289,
        "sourceUnit": 2829,
        "src": "465:63:0",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 5,
              "name": "IDiamondLoupe",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "474:13:0",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/mudge/projects/governance-token-diamond/contracts/interfaces/IERC165.sol",
        "file": "./interfaces/IERC165.sol",
        "id": 8,
        "nodeType": "ImportDirective",
        "scope": 289,
        "sourceUnit": 2840,
        "src": "530:51:0",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 7,
              "name": "IERC165",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "539:7:0",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/mudge/projects/governance-token-diamond/contracts/facets/DiamondLoupe.sol",
        "file": "./facets/DiamondLoupe.sol",
        "id": 10,
        "nodeType": "ImportDirective",
        "scope": 289,
        "sourceUnit": 1302,
        "src": "583:57:0",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 9,
              "name": "DiamondLoupe",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "592:12:0",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/mudge/projects/governance-token-diamond/contracts/lib/Diamond.sol",
        "file": "./lib/Diamond.sol",
        "id": 13,
        "nodeType": "ImportDirective",
        "scope": 289,
        "sourceUnit": 3475,
        "src": "642:68:0",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 11,
              "name": "Diamond",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "651:7:0",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          },
          {
            "foreign": {
              "argumentTypes": null,
              "id": 12,
              "name": "DiamondStorageContract",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "660:22:0",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/mudge/projects/governance-token-diamond/contracts/facets/ERC20Token.sol",
        "file": "./facets/ERC20Token.sol",
        "id": 15,
        "nodeType": "ImportDirective",
        "scope": 289,
        "sourceUnit": 1780,
        "src": "712:53:0",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 14,
              "name": "ERC20Token",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "721:10:0",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/mudge/projects/governance-token-diamond/contracts/facets/Governance.sol",
        "file": "./facets/Governance.sol",
        "id": 17,
        "nodeType": "ImportDirective",
        "scope": 289,
        "sourceUnit": 2780,
        "src": "767:53:0",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 16,
              "name": "Governance",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "776:10:0",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 18,
              "name": "InternalFunctions",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3535,
              "src": "859:17:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_InternalFunctions_$3535",
                "typeString": "contract InternalFunctions"
              }
            },
            "id": 19,
            "nodeType": "InheritanceSpecifier",
            "src": "859:17:0"
          }
        ],
        "contractDependencies": [
          1301,
          1779,
          2779,
          3474,
          3535,
          3569,
          3603,
          3672
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 288,
        "linearizedBaseContracts": [
          288,
          3535,
          3672,
          3603,
          3474,
          3569
        ],
        "name": "GovernanceTokenDiamond",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 244,
              "nodeType": "Block",
              "src": "906:3207:0",
              "statements": [
                {
                  "assignments": [
                    23,
                    25
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23,
                      "mutability": "mutable",
                      "name": "ets",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 244,
                      "src": "918:29:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20TokenStorage_$3591_storage_ptr",
                        "typeString": "struct ERC20TokenStorageContract.ERC20TokenStorage"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 22,
                        "name": "ERC20TokenStorage",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 3591,
                        "src": "918:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20TokenStorage_$3591_storage_ptr",
                          "typeString": "struct ERC20TokenStorageContract.ERC20TokenStorage"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 25,
                      "mutability": "mutable",
                      "name": "gs",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 244,
                      "src": "958:28:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_GovernanceStorage_$3660_storage_ptr",
                        "typeString": "struct GovernanceStorageContract.GovernanceStorage"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 24,
                        "name": "GovernanceStorage",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 3660,
                        "src": "958:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GovernanceStorage_$3660_storage_ptr",
                          "typeString": "struct GovernanceStorageContract.GovernanceStorage"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 28,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 26,
                      "name": "governanceTokenStorage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3507,
                      "src": "990:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20TokenStorage_$3591_storage_ptr_$_t_struct$_GovernanceStorage_$3660_storage_ptr_$",
                        "typeString": "function () pure returns (struct ERC20TokenStorageContract.ERC20TokenStorage storage pointer,struct GovernanceStorageContract.GovernanceStorage storage pointer)"
                      }
                    },
                    "id": 27,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "990:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_struct$_ERC20TokenStorage_$3591_storage_ptr_$_t_struct$_GovernanceStorage_$3660_storage_ptr_$",
                      "typeString": "tuple(struct ERC20TokenStorageContract.ERC20TokenStorage storage pointer,struct GovernanceStorageContract.GovernanceStorage storage pointer)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "917:97:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 33,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 29,
                        "name": "ets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23,
                        "src": "1099:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20TokenStorage_$3591_storage_ptr",
                          "typeString": "struct ERC20TokenStorageContract.ERC20TokenStorage storage pointer"
                        }
                      },
                      "id": 31,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalSupplyCap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3588,
                      "src": "1099:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "3130305f3030305f303030653138",
                      "id": 32,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1120:14:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000000000000000000000000_by_1",
                        "typeString": "int_const 100000000000000000000000000"
                      },
                      "value": "100_000_000e18"
                    },
                    "src": "1099:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "id": 34,
                  "nodeType": "ExpressionStatement",
                  "src": "1099:35:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 39,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 35,
                        "name": "gs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "1224:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GovernanceStorage_$3660_storage_ptr",
                          "typeString": "struct GovernanceStorageContract.GovernanceStorage storage pointer"
                        }
                      },
                      "id": 37,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "quorumDivisor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3653,
                      "src": "1224:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "3230",
                      "id": 38,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1243:2:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_20_by_1",
                        "typeString": "int_const 20"
                      },
                      "value": "20"
                    },
                    "src": "1224:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 40,
                  "nodeType": "ExpressionStatement",
                  "src": "1224:21:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 45,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 41,
                        "name": "gs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "1333:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GovernanceStorage_$3660_storage_ptr",
                          "typeString": "struct GovernanceStorageContract.GovernanceStorage storage pointer"
                        }
                      },
                      "id": 43,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "proposalThresholdDivisor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3647,
                      "src": "1333:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "313030",
                      "id": 44,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1363:3:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "1333:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 46,
                  "nodeType": "ExpressionStatement",
                  "src": "1333:33:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 51,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 47,
                        "name": "gs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "1469:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GovernanceStorage_$3660_storage_ptr",
                          "typeString": "struct GovernanceStorageContract.GovernanceStorage storage pointer"
                        }
                      },
                      "id": 49,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "proposerAwardDivisor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3655,
                      "src": "1469:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "3230",
                      "id": 50,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1495:2:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_20_by_1",
                        "typeString": "int_const 20"
                      },
                      "value": "20"
                    },
                    "src": "1469:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 52,
                  "nodeType": "ExpressionStatement",
                  "src": "1469:28:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 57,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 53,
                        "name": "gs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "1597:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GovernanceStorage_$3660_storage_ptr",
                          "typeString": "struct GovernanceStorageContract.GovernanceStorage storage pointer"
                        }
                      },
                      "id": 55,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "voterAwardDivisor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3657,
                      "src": "1597:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "313030",
                      "id": 56,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1620:3:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "1597:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 58,
                  "nodeType": "ExpressionStatement",
                  "src": "1597:26:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 59,
                        "name": "gs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "1784:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GovernanceStorage_$3660_storage_ptr",
                          "typeString": "struct GovernanceStorageContract.GovernanceStorage storage pointer"
                        }
                      },
                      "id": 61,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "voteAwardCapDivisor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3659,
                      "src": "1784:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "3230",
                      "id": 62,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1809:2:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_20_by_1",
                        "typeString": "int_const 20"
                      },
                      "value": "20"
                    },
                    "src": "1784:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 64,
                  "nodeType": "ExpressionStatement",
                  "src": "1784:27:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 69,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 65,
                        "name": "gs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "1887:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GovernanceStorage_$3660_storage_ptr",
                          "typeString": "struct GovernanceStorageContract.GovernanceStorage storage pointer"
                        }
                      },
                      "id": 67,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "minimumVotingTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3649,
                      "src": "1887:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "3438",
                      "id": 68,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1910:2:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_48_by_1",
                        "typeString": "int_const 48"
                      },
                      "value": "48"
                    },
                    "src": "1887:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 70,
                  "nodeType": "ExpressionStatement",
                  "src": "1887:25:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 75,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 71,
                        "name": "gs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "2003:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GovernanceStorage_$3660_storage_ptr",
                          "typeString": "struct GovernanceStorageContract.GovernanceStorage storage pointer"
                        }
                      },
                      "id": 73,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "maximumVotingTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3651,
                      "src": "2003:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "333336",
                      "id": 74,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2026:3:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_336_by_1",
                        "typeString": "int_const 336"
                      },
                      "value": "336"
                    },
                    "src": "2003:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 76,
                  "nodeType": "ExpressionStatement",
                  "src": "2003:26:0"
                },
                {
                  "assignments": [
                    78
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 78,
                      "mutability": "mutable",
                      "name": "diamondLoupe",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 244,
                      "src": "2135:25:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DiamondLoupe_$1301",
                        "typeString": "contract DiamondLoupe"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 77,
                        "name": "DiamondLoupe",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1301,
                        "src": "2135:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DiamondLoupe_$1301",
                          "typeString": "contract DiamondLoupe"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 82,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 80,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2163:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_DiamondLoupe_$1301_$",
                        "typeString": "function () returns (contract DiamondLoupe)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 79,
                        "name": "DiamondLoupe",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1301,
                        "src": "2167:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DiamondLoupe_$1301",
                          "typeString": "contract DiamondLoupe"
                        }
                      }
                    },
                    "id": 81,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2163:18:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DiamondLoupe_$1301",
                      "typeString": "contract DiamondLoupe"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2135:46:0"
                },
                {
                  "assignments": [
                    84
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 84,
                      "mutability": "mutable",
                      "name": "erc20Token",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 244,
                      "src": "2195:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Token_$1779",
                        "typeString": "contract ERC20Token"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 83,
                        "name": "ERC20Token",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1779,
                        "src": "2195:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Token_$1779",
                          "typeString": "contract ERC20Token"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 88,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 86,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2219:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_ERC20Token_$1779_$",
                        "typeString": "function () returns (contract ERC20Token)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 85,
                        "name": "ERC20Token",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1779,
                        "src": "2223:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Token_$1779",
                          "typeString": "contract ERC20Token"
                        }
                      }
                    },
                    "id": 87,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2219:16:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Token_$1779",
                      "typeString": "contract ERC20Token"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2195:40:0"
                },
                {
                  "assignments": [
                    90
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 90,
                      "mutability": "mutable",
                      "name": "governance",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 244,
                      "src": "2246:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Governance_$2779",
                        "typeString": "contract Governance"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 89,
                        "name": "Governance",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2779,
                        "src": "2246:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Governance_$2779",
                          "typeString": "contract Governance"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 94,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 92,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2270:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Governance_$2779_$",
                        "typeString": "function () returns (contract Governance)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 91,
                        "name": "Governance",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2779,
                        "src": "2274:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Governance_$2779",
                          "typeString": "contract Governance"
                        }
                      }
                    },
                    "id": 93,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2270:16:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Governance_$2779",
                      "typeString": "contract Governance"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2246:40:0"
                },
                {
                  "assignments": [
                    99
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 99,
                      "mutability": "mutable",
                      "name": "cut",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 244,
                      "src": "2299:18:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                        "typeString": "bytes[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 97,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2299:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 98,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "2299:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 105,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "33",
                        "id": 103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2332:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "id": 102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2320:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 100,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2324:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 101,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "2324:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      }
                    },
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2320:14:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2299:35:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 106,
                        "name": "cut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99,
                        "src": "2414:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      "id": 108,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2418:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2414:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 111,
                          "name": "diamondLoupe",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "2454:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_DiamondLoupe_$1301",
                            "typeString": "contract DiamondLoupe"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 112,
                              "name": "IDiamondLoupe",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2828,
                              "src": "2481:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IDiamondLoupe_$2828_$",
                                "typeString": "type(contract IDiamondLoupe)"
                              }
                            },
                            "id": 113,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "facetFunctionSelectors",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2813,
                            "src": "2481:36:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_declaration_view$_t_address_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function IDiamondLoupe.facetFunctionSelectors(address) view returns (bytes memory)"
                            }
                          },
                          "id": 114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2481:45:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 115,
                              "name": "IDiamondLoupe",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2828,
                              "src": "2541:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IDiamondLoupe_$2828_$",
                                "typeString": "type(contract IDiamondLoupe)"
                              }
                            },
                            "id": 116,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "facets",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2805,
                            "src": "2541:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_declaration_view$__$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "function IDiamondLoupe.facets() view returns (bytes memory[] memory)"
                            }
                          },
                          "id": 117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2541:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 118,
                              "name": "IDiamondLoupe",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2828,
                              "src": "2585:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IDiamondLoupe_$2828_$",
                                "typeString": "type(contract IDiamondLoupe)"
                              }
                            },
                            "id": 119,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "facetAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2827,
                            "src": "2585:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_declaration_view$_t_bytes4_$returns$_t_address_$",
                              "typeString": "function IDiamondLoupe.facetAddress(bytes4) view returns (address)"
                            }
                          },
                          "id": 120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2585:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 121,
                              "name": "IDiamondLoupe",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2828,
                              "src": "2635:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IDiamondLoupe_$2828_$",
                                "typeString": "type(contract IDiamondLoupe)"
                              }
                            },
                            "id": 122,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "facetAddresses",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2819,
                            "src": "2635:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_declaration_view$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function IDiamondLoupe.facetAddresses() view returns (bytes memory)"
                            }
                          },
                          "id": 123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2635:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 124,
                              "name": "IERC165",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2839,
                              "src": "2687:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC165_$2839_$",
                                "typeString": "type(contract IERC165)"
                              }
                            },
                            "id": 125,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "supportsInterface",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2838,
                            "src": "2687:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_declaration_view$_t_bytes4_$returns$_t_bool_$",
                              "typeString": "function IERC165.supportsInterface(bytes4) view returns (bool)"
                            }
                          },
                          "id": 126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2687:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_DiamondLoupe_$1301",
                            "typeString": "contract DiamondLoupe"
                          },
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 109,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "2423:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "encodePacked",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2423:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2423:321:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "2414:330:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 129,
                  "nodeType": "ExpressionStatement",
                  "src": "2414:330:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 130,
                        "name": "cut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99,
                        "src": "2757:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      "id": 132,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2761:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2757:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 135,
                          "name": "erc20Token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 84,
                          "src": "2797:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Token_$1779",
                            "typeString": "contract ERC20Token"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 136,
                              "name": "ERC20Token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1779,
                              "src": "2822:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC20Token_$1779_$",
                                "typeString": "type(contract ERC20Token)"
                              }
                            },
                            "id": 137,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "name",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1320,
                            "src": "2822:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_declaration_pure$__$returns$_t_string_memory_ptr_$",
                              "typeString": "function ERC20Token.name() pure returns (string memory)"
                            }
                          },
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2822:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 139,
                              "name": "ERC20Token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1779,
                              "src": "2861:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC20Token_$1779_$",
                                "typeString": "type(contract ERC20Token)"
                              }
                            },
                            "id": 140,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "symbol",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1329,
                            "src": "2861:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_declaration_pure$__$returns$_t_string_memory_ptr_$",
                              "typeString": "function ERC20Token.symbol() pure returns (string memory)"
                            }
                          },
                          "id": 141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2861:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 142,
                              "name": "ERC20Token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1779,
                              "src": "2902:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC20Token_$1779_$",
                                "typeString": "type(contract ERC20Token)"
                              }
                            },
                            "id": 143,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "decimals",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1338,
                            "src": "2902:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_declaration_pure$__$returns$_t_uint8_$",
                              "typeString": "function ERC20Token.decimals() pure returns (uint8)"
                            }
                          },
                          "id": 144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2902:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 145,
                              "name": "ERC20Token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1779,
                              "src": "2945:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC20Token_$1779_$",
                                "typeString": "type(contract ERC20Token)"
                              }
                            },
                            "id": 146,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "totalSupply",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1349,
                            "src": "2945:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_declaration_view$__$returns$_t_uint256_$",
                              "typeString": "function ERC20Token.totalSupply() view returns (uint256)"
                            }
                          },
                          "id": 147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2945:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 148,
                              "name": "ERC20Token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1779,
                              "src": "2991:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC20Token_$1779_$",
                                "typeString": "type(contract ERC20Token)"
                              }
                            },
                            "id": 149,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1370,
                            "src": "2991:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_declaration_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function ERC20Token.balanceOf(address) view returns (uint256)"
                            }
                          },
                          "id": 150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2991:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 151,
                              "name": "ERC20Token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1779,
                              "src": "3035:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC20Token_$1779_$",
                                "typeString": "type(contract ERC20Token)"
                              }
                            },
                            "id": 152,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1392,
                            "src": "3035:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function ERC20Token.transfer(address,uint256) returns (bool)"
                            }
                          },
                          "id": 153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3035:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 154,
                              "name": "ERC20Token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1779,
                              "src": "3078:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC20Token_$1779_$",
                                "typeString": "type(contract ERC20Token)"
                              }
                            },
                            "id": 155,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1478,
                            "src": "3078:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function ERC20Token.transferFrom(address,address,uint256) returns (bool)"
                            }
                          },
                          "id": 156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3078:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 157,
                              "name": "ERC20Token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1779,
                              "src": "3125:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC20Token_$1779_$",
                                "typeString": "type(contract ERC20Token)"
                              }
                            },
                            "id": 158,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "approve",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1629,
                            "src": "3125:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function ERC20Token.approve(address,uint256) returns (bool)"
                            }
                          },
                          "id": 159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3125:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 160,
                              "name": "ERC20Token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1779,
                              "src": "3167:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC20Token_$1779_$",
                                "typeString": "type(contract ERC20Token)"
                              }
                            },
                            "id": 161,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1650,
                            "src": "3167:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_declaration_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function ERC20Token.allowance(address,address) view returns (uint256)"
                            }
                          },
                          "id": 162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3167:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 163,
                              "name": "ERC20Token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1779,
                              "src": "3211:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC20Token_$1779_$",
                                "typeString": "type(contract ERC20Token)"
                              }
                            },
                            "id": 164,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "increaseAllowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1714,
                            "src": "3211:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function ERC20Token.increaseAllowance(address,uint256) returns (bool)"
                            }
                          },
                          "id": 165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3211:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 166,
                              "name": "ERC20Token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1779,
                              "src": "3263:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC20Token_$1779_$",
                                "typeString": "type(contract ERC20Token)"
                              }
                            },
                            "id": 167,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "decreaseAllowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1778,
                            "src": "3263:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function ERC20Token.decreaseAllowance(address,uint256) returns (bool)"
                            }
                          },
                          "id": 168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3263:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20Token_$1779",
                            "typeString": "contract ERC20Token"
                          },
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 133,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "2766:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "encodePacked",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2766:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 169,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2766:545:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "2757:554:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 171,
                  "nodeType": "ExpressionStatement",
                  "src": "2757:554:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 172,
                        "name": "cut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99,
                        "src": "3324:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      "id": 174,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3328:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3324:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 177,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 90,
                          "src": "3364:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Governance_$2779",
                            "typeString": "contract Governance"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 178,
                              "name": "Governance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2779,
                              "src": "3389:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Governance_$2779_$",
                                "typeString": "type(contract Governance)"
                              }
                            },
                            "id": 179,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "propose",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2005,
                            "src": "3389:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function Governance.propose(address,uint256) returns (uint256)"
                            }
                          },
                          "id": 180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3389:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 181,
                              "name": "Governance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2779,
                              "src": "3431:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Governance_$2779_$",
                                "typeString": "type(contract Governance)"
                              }
                            },
                            "id": 182,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "executeProposal",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2239,
                            "src": "3431:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_declaration_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function Governance.executeProposal(uint256)"
                            }
                          },
                          "id": 183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3431:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 184,
                              "name": "Governance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2779,
                              "src": "3481:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Governance_$2779_$",
                                "typeString": "type(contract Governance)"
                              }
                            },
                            "id": 185,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "proposalStatus",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2358,
                            "src": "3481:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_declaration_view$_t_uint256_$returns$_t_enum$_ProposalStatus_$2247_$",
                              "typeString": "function Governance.proposalStatus(uint256) view returns (enum Governance.ProposalStatus)"
                            }
                          },
                          "id": 186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3481:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 187,
                              "name": "Governance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2779,
                              "src": "3530:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Governance_$2779_$",
                                "typeString": "type(contract Governance)"
                              }
                            },
                            "id": 188,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "proposal",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2409,
                            "src": "3530:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_declaration_view$_t_uint256_$returns$_t_struct$_RetrievedProposal_$2371_memory_ptr_$",
                              "typeString": "function Governance.proposal(uint256) view returns (struct Governance.RetrievedProposal memory)"
                            }
                          },
                          "id": 189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3530:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 190,
                              "name": "Governance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2779,
                              "src": "3573:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Governance_$2779_$",
                                "typeString": "type(contract Governance)"
                              }
                            },
                            "id": 191,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "vote",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2581,
                            "src": "3573:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_declaration_nonpayable$_t_uint256_$_t_bool_$returns$__$",
                              "typeString": "function Governance.vote(uint256,bool)"
                            }
                          },
                          "id": 192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3573:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 193,
                              "name": "Governance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2779,
                              "src": "3612:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Governance_$2779_$",
                                "typeString": "type(contract Governance)"
                              }
                            },
                            "id": 194,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "unvote",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2778,
                            "src": "3612:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_declaration_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function Governance.unvote(uint256)"
                            }
                          },
                          "id": 195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3612:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Governance_$2779",
                            "typeString": "contract Governance"
                          },
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 175,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "3333:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "encodePacked",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3333:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3333:316:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "3324:325:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 198,
                  "nodeType": "ExpressionStatement",
                  "src": "3324:325:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 200,
                        "name": "cut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99,
                        "src": "3681:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      ],
                      "id": 199,
                      "name": "diamondCut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3473,
                      "src": "3670:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory[] memory)"
                      }
                    },
                    "id": 201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3670:15:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 202,
                  "nodeType": "ExpressionStatement",
                  "src": "3670:15:0"
                },
                {
                  "assignments": [
                    204
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 204,
                      "mutability": "mutable",
                      "name": "ds",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 244,
                      "src": "3737:25:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DiamondStorage_$3557_storage_ptr",
                        "typeString": "struct DiamondStorageContract.DiamondStorage"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 203,
                        "name": "DiamondStorage",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 3557,
                        "src": "3737:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DiamondStorage_$3557_storage_ptr",
                          "typeString": "struct DiamondStorageContract.DiamondStorage"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 207,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 205,
                      "name": "diamondStorage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3568,
                      "src": "3765:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$3557_storage_ptr_$",
                        "typeString": "function () pure returns (struct DiamondStorageContract.DiamondStorage storage pointer)"
                      }
                    },
                    "id": 206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3765:16:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DiamondStorage_$3557_storage_ptr",
                      "typeString": "struct DiamondStorageContract.DiamondStorage storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3737:44:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 208,
                          "name": "ds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 204,
                          "src": "3792:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DiamondStorage_$3557_storage_ptr",
                            "typeString": "struct DiamondStorageContract.DiamondStorage storage pointer"
                          }
                        },
                        "id": 213,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportedInterfaces",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3546,
                        "src": "3792:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
                          "typeString": "mapping(bytes4 => bool)"
                        }
                      },
                      "id": 214,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 210,
                            "name": "IERC165",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2839,
                            "src": "3815:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC165_$2839_$",
                              "typeString": "type(contract IERC165)"
                            }
                          },
                          "id": 211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "supportsInterface",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2838,
                          "src": "3815:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_declaration_view$_t_bytes4_$returns$_t_bool_$",
                            "typeString": "function IERC165.supportsInterface(bytes4) view returns (bool)"
                          }
                        },
                        "id": 212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3815:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3792:58:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 215,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3853:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3792:65:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 217,
                  "nodeType": "ExpressionStatement",
                  "src": "3792:65:0"
                },
                {
                  "assignments": [
                    219
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 219,
                      "mutability": "mutable",
                      "name": "interfaceID",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 244,
                      "src": "3876:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "typeName": {
                        "id": 218,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "3876:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 235,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    },
                    "id": 234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 220,
                              "name": "IDiamondLoupe",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2828,
                              "src": "3897:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IDiamondLoupe_$2828_$",
                                "typeString": "type(contract IDiamondLoupe)"
                              }
                            },
                            "id": 221,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "facets",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2805,
                            "src": "3897:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_declaration_view$__$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "function IDiamondLoupe.facets() view returns (bytes memory[] memory)"
                            }
                          },
                          "id": 222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3897:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "^",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 223,
                              "name": "IDiamondLoupe",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2828,
                              "src": "3929:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IDiamondLoupe_$2828_$",
                                "typeString": "type(contract IDiamondLoupe)"
                              }
                            },
                            "id": 224,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "facetFunctionSelectors",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2813,
                            "src": "3929:36:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_declaration_view$_t_address_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function IDiamondLoupe.facetFunctionSelectors(address) view returns (bytes memory)"
                            }
                          },
                          "id": 225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3929:45:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "3897:77:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "^",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 227,
                            "name": "IDiamondLoupe",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2828,
                            "src": "3977:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IDiamondLoupe_$2828_$",
                              "typeString": "type(contract IDiamondLoupe)"
                            }
                          },
                          "id": 228,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "facetAddresses",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2819,
                          "src": "3977:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_declaration_view$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function IDiamondLoupe.facetAddresses() view returns (bytes memory)"
                          }
                        },
                        "id": 229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3977:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "3897:117:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "^",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 231,
                          "name": "IDiamondLoupe",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2828,
                          "src": "4017:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IDiamondLoupe_$2828_$",
                            "typeString": "type(contract IDiamondLoupe)"
                          }
                        },
                        "id": 232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "facetAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2827,
                        "src": "4017:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_declaration_view$_t_bytes4_$returns$_t_address_$",
                          "typeString": "function IDiamondLoupe.facetAddress(bytes4) view returns (address)"
                        }
                      },
                      "id": 233,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4017:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "3897:155:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3876:176:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 236,
                          "name": "ds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 204,
                          "src": "4063:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DiamondStorage_$3557_storage_ptr",
                            "typeString": "struct DiamondStorageContract.DiamondStorage storage pointer"
                          }
                        },
                        "id": 239,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportedInterfaces",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3546,
                        "src": "4063:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
                          "typeString": "mapping(bytes4 => bool)"
                        }
                      },
                      "id": 240,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 238,
                        "name": "interfaceID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 219,
                        "src": "4086:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4063:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4101:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4063:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 243,
                  "nodeType": "ExpressionStatement",
                  "src": "4063:42:0"
                }
              ]
            },
            "documentation": null,
            "id": 245,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "903:2:0"
            },
            "returnParameters": {
              "id": 21,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "906:0:0"
            },
            "scope": 288,
            "src": "892:3221:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 282,
              "nodeType": "Block",
              "src": "4271:703:0",
              "statements": [
                {
                  "assignments": [
                    249
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 249,
                      "mutability": "mutable",
                      "name": "ds",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 282,
                      "src": "4290:25:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DiamondStorage_$3557_storage_ptr",
                        "typeString": "struct DiamondStorageContract.DiamondStorage"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 248,
                        "name": "DiamondStorage",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 3557,
                        "src": "4290:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DiamondStorage_$3557_storage_ptr",
                          "typeString": "struct DiamondStorageContract.DiamondStorage"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 250,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4290:25:0"
                },
                {
                  "assignments": [
                    252
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 252,
                      "mutability": "mutable",
                      "name": "position",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 282,
                      "src": "4326:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 251,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4326:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 255,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 253,
                      "name": "DiamondStorageContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3569,
                      "src": "4345:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_DiamondStorageContract_$3569_$",
                        "typeString": "type(contract DiamondStorageContract)"
                      }
                    },
                    "id": 254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "DIAMOND_STORAGE_POSITION",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 3542,
                    "src": "4345:47:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4326:66:0"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "4423:23:0",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "4425:19:0",
                        "value": {
                          "name": "position",
                          "nodeType": "YulIdentifier",
                          "src": "4436:8:0"
                        },
                        "variableNames": [
                          {
                            "name": "ds.slot",
                            "nodeType": "YulIdentifier",
                            "src": "4425:7:0"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 249,
                      "isOffset": false,
                      "isSlot": true,
                      "src": "4425:7:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 252,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "4436:8:0",
                      "valueSize": 1
                    }
                  ],
                  "id": 256,
                  "nodeType": "InlineAssembly",
                  "src": "4414:32:0"
                },
                {
                  "assignments": [
                    258
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 258,
                      "mutability": "mutable",
                      "name": "facet",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 282,
                      "src": "4456:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 257,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4456:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 270,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 263,
                                "name": "ds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 249,
                                "src": "4488:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_DiamondStorage_$3557_storage_ptr",
                                  "typeString": "struct DiamondStorageContract.DiamondStorage storage pointer"
                                }
                              },
                              "id": 264,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "facets",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3550,
                              "src": "4488:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes4_$_t_bytes32_$",
                                "typeString": "mapping(bytes4 => bytes32)"
                              }
                            },
                            "id": 267,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 265,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4498:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 266,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sig",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "4498:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4488:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4480:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes20_$",
                            "typeString": "type(bytes20)"
                          },
                          "typeName": {
                            "id": 261,
                            "name": "bytes20",
                            "nodeType": "ElementaryTypeName",
                            "src": "4480:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4480:27:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes20",
                          "typeString": "bytes20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes20",
                          "typeString": "bytes20"
                        }
                      ],
                      "id": 260,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4472:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 259,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4472:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4472:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4456:52:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 272,
                          "name": "facet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 258,
                          "src": "4527:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 275,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4544:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 274,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4536:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 273,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4536:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4536:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "4527:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "46756e6374696f6e20646f6573206e6f742065786973742e",
                        "id": 278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4548:26:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0fa78a13653e06ad99b0fd069a1f00be9aaee42e8019fef06fc5450b72e1b65e",
                          "typeString": "literal_string \"Function does not exist.\""
                        },
                        "value": "Function does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0fa78a13653e06ad99b0fd069a1f00be9aaee42e8019fef06fc5450b72e1b65e",
                          "typeString": "literal_string \"Function does not exist.\""
                        }
                      ],
                      "id": 271,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4519:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4519:56:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 280,
                  "nodeType": "ExpressionStatement",
                  "src": "4519:56:0"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "4595:372:0",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "4610:22:0",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4627:4:0",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "4621:5:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4621:11:0"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "4614:3:0",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "4659:3:0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4664:1:0",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "calldatasize",
                                "nodeType": "YulIdentifier",
                                "src": "4667:12:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4667:14:0"
                            }
                          ],
                          "functionName": {
                            "name": "calldatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "4646:12:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4646:36:0"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4646:36:0"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "4696:67:0",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "gas",
                                "nodeType": "YulIdentifier",
                                "src": "4723:3:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4723:5:0"
                            },
                            {
                              "name": "facet",
                              "nodeType": "YulIdentifier",
                              "src": "4730:5:0"
                            },
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "4737:3:0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "calldatasize",
                                "nodeType": "YulIdentifier",
                                "src": "4742:12:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4742:14:0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4758:1:0",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4761:1:0",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "delegatecall",
                            "nodeType": "YulIdentifier",
                            "src": "4710:12:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4710:53:0"
                        },
                        "variables": [
                          {
                            "name": "result",
                            "nodeType": "YulTypedName",
                            "src": "4700:6:0",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "4777:28:0",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "4789:14:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4789:16:0"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "4781:4:0",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "4834:3:0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4839:1:0",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "4842:4:0"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "4819:14:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4819:28:0"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4819:28:0"
                      },
                      {
                        "cases": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "4895:19:0",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "4903:3:0"
                                      },
                                      {
                                        "name": "size",
                                        "nodeType": "YulIdentifier",
                                        "src": "4908:4:0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "revert",
                                      "nodeType": "YulIdentifier",
                                      "src": "4896:6:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4896:17:0"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "4896:17:0"
                                }
                              ]
                            },
                            "nodeType": "YulCase",
                            "src": "4888:26:0",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4893:1:0",
                              "type": "",
                              "value": "0"
                            }
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "4936:20:0",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "4945:3:0"
                                      },
                                      {
                                        "name": "size",
                                        "nodeType": "YulIdentifier",
                                        "src": "4950:4:0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "return",
                                      "nodeType": "YulIdentifier",
                                      "src": "4937:6:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4937:18:0"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "4937:18:0"
                                }
                              ]
                            },
                            "nodeType": "YulCase",
                            "src": "4928:28:0",
                            "value": "default"
                          }
                        ],
                        "expression": {
                          "name": "result",
                          "nodeType": "YulIdentifier",
                          "src": "4868:6:0"
                        },
                        "nodeType": "YulSwitch",
                        "src": "4861:95:0"
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 258,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "4730:5:0",
                      "valueSize": 1
                    }
                  ],
                  "id": 281,
                  "nodeType": "InlineAssembly",
                  "src": "4586:381:0"
                }
              ]
            },
            "documentation": null,
            "id": 283,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 246,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4251:2:0"
            },
            "returnParameters": {
              "id": 247,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4271:0:0"
            },
            "scope": 288,
            "src": "4243:731:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 286,
              "nodeType": "Block",
              "src": "5009:8:0",
              "statements": []
            },
            "documentation": null,
            "id": 287,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 284,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4989:2:0"
            },
            "returnParameters": {
              "id": 285,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5009:0:0"
            },
            "scope": 288,
            "src": "4982:35:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 289,
        "src": "824:4196:0"
      }
    ],
    "src": "33:4991:0"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/mudge/projects/governance-token-diamond/contracts/GovernanceTokenDiamond.sol",
    "exportedSymbols": {
      "GovernanceTokenDiamond": [
        288
      ]
    },
    "id": 289,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "58:33:0"
      },
      {
        "absolutePath": "/C/Users/mudge/projects/governance-token-diamond/contracts/lib/InternalFunctions.sol",
        "file": "./lib/InternalFunctions.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 289,
        "sourceUnit": 3536,
        "src": "399:64:0",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 3,
              "name": "InternalFunctions",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "408:17:0",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/mudge/projects/governance-token-diamond/contracts/interfaces/IDiamondLoupe.sol",
        "file": "./interfaces/IDiamondLoupe.sol",
        "id": 6,
        "nodeType": "ImportDirective",
        "scope": 289,
        "sourceUnit": 2829,
        "src": "465:63:0",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 5,
              "name": "IDiamondLoupe",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "474:13:0",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/mudge/projects/governance-token-diamond/contracts/interfaces/IERC165.sol",
        "file": "./interfaces/IERC165.sol",
        "id": 8,
        "nodeType": "ImportDirective",
        "scope": 289,
        "sourceUnit": 2840,
        "src": "530:51:0",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 7,
              "name": "IERC165",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "539:7:0",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/mudge/projects/governance-token-diamond/contracts/facets/DiamondLoupe.sol",
        "file": "./facets/DiamondLoupe.sol",
        "id": 10,
        "nodeType": "ImportDirective",
        "scope": 289,
        "sourceUnit": 1302,
        "src": "583:57:0",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 9,
              "name": "DiamondLoupe",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "592:12:0",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/mudge/projects/governance-token-diamond/contracts/lib/Diamond.sol",
        "file": "./lib/Diamond.sol",
        "id": 13,
        "nodeType": "ImportDirective",
        "scope": 289,
        "sourceUnit": 3475,
        "src": "642:68:0",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 11,
              "name": "Diamond",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "651:7:0",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          },
          {
            "foreign": {
              "argumentTypes": null,
              "id": 12,
              "name": "DiamondStorageContract",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "660:22:0",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/mudge/projects/governance-token-diamond/contracts/facets/ERC20Token.sol",
        "file": "./facets/ERC20Token.sol",
        "id": 15,
        "nodeType": "ImportDirective",
        "scope": 289,
        "sourceUnit": 1780,
        "src": "712:53:0",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 14,
              "name": "ERC20Token",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "721:10:0",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/mudge/projects/governance-token-diamond/contracts/facets/Governance.sol",
        "file": "./facets/Governance.sol",
        "id": 17,
        "nodeType": "ImportDirective",
        "scope": 289,
        "sourceUnit": 2780,
        "src": "767:53:0",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 16,
              "name": "Governance",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "776:10:0",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 18,
              "name": "InternalFunctions",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3535,
              "src": "859:17:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_InternalFunctions_$3535",
                "typeString": "contract InternalFunctions"
              }
            },
            "id": 19,
            "nodeType": "InheritanceSpecifier",
            "src": "859:17:0"
          }
        ],
        "contractDependencies": [
          1301,
          1779,
          2779,
          3474,
          3535,
          3569,
          3603,
          3672
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 288,
        "linearizedBaseContracts": [
          288,
          3535,
          3672,
          3603,
          3474,
          3569
        ],
        "name": "GovernanceTokenDiamond",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 244,
              "nodeType": "Block",
              "src": "906:3207:0",
              "statements": [
                {
                  "assignments": [
                    23,
                    25
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23,
                      "mutability": "mutable",
                      "name": "ets",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 244,
                      "src": "918:29:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20TokenStorage_$3591_storage_ptr",
                        "typeString": "struct ERC20TokenStorageContract.ERC20TokenStorage"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 22,
                        "name": "ERC20TokenStorage",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 3591,
                        "src": "918:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20TokenStorage_$3591_storage_ptr",
                          "typeString": "struct ERC20TokenStorageContract.ERC20TokenStorage"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 25,
                      "mutability": "mutable",
                      "name": "gs",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 244,
                      "src": "958:28:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_GovernanceStorage_$3660_storage_ptr",
                        "typeString": "struct GovernanceStorageContract.GovernanceStorage"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 24,
                        "name": "GovernanceStorage",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 3660,
                        "src": "958:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GovernanceStorage_$3660_storage_ptr",
                          "typeString": "struct GovernanceStorageContract.GovernanceStorage"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 28,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 26,
                      "name": "governanceTokenStorage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3507,
                      "src": "990:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20TokenStorage_$3591_storage_ptr_$_t_struct$_GovernanceStorage_$3660_storage_ptr_$",
                        "typeString": "function () pure returns (struct ERC20TokenStorageContract.ERC20TokenStorage storage pointer,struct GovernanceStorageContract.GovernanceStorage storage pointer)"
                      }
                    },
                    "id": 27,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "990:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_struct$_ERC20TokenStorage_$3591_storage_ptr_$_t_struct$_GovernanceStorage_$3660_storage_ptr_$",
                      "typeString": "tuple(struct ERC20TokenStorageContract.ERC20TokenStorage storage pointer,struct GovernanceStorageContract.GovernanceStorage storage pointer)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "917:97:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 33,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 29,
                        "name": "ets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23,
                        "src": "1099:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20TokenStorage_$3591_storage_ptr",
                          "typeString": "struct ERC20TokenStorageContract.ERC20TokenStorage storage pointer"
                        }
                      },
                      "id": 31,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalSupplyCap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3588,
                      "src": "1099:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "3130305f3030305f303030653138",
                      "id": 32,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1120:14:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000000000000000000000000_by_1",
                        "typeString": "int_const 100000000000000000000000000"
                      },
                      "value": "100_000_000e18"
                    },
                    "src": "1099:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "id": 34,
                  "nodeType": "ExpressionStatement",
                  "src": "1099:35:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 39,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 35,
                        "name": "gs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "1224:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GovernanceStorage_$3660_storage_ptr",
                          "typeString": "struct GovernanceStorageContract.GovernanceStorage storage pointer"
                        }
                      },
                      "id": 37,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "quorumDivisor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3653,
                      "src": "1224:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "3230",
                      "id": 38,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1243:2:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_20_by_1",
                        "typeString": "int_const 20"
                      },
                      "value": "20"
                    },
                    "src": "1224:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 40,
                  "nodeType": "ExpressionStatement",
                  "src": "1224:21:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 45,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 41,
                        "name": "gs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "1333:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GovernanceStorage_$3660_storage_ptr",
                          "typeString": "struct GovernanceStorageContract.GovernanceStorage storage pointer"
                        }
                      },
                      "id": 43,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "proposalThresholdDivisor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3647,
                      "src": "1333:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "313030",
                      "id": 44,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1363:3:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "1333:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 46,
                  "nodeType": "ExpressionStatement",
                  "src": "1333:33:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 51,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 47,
                        "name": "gs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "1469:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GovernanceStorage_$3660_storage_ptr",
                          "typeString": "struct GovernanceStorageContract.GovernanceStorage storage pointer"
                        }
                      },
                      "id": 49,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "proposerAwardDivisor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3655,
                      "src": "1469:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "3230",
                      "id": 50,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1495:2:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_20_by_1",
                        "typeString": "int_const 20"
                      },
                      "value": "20"
                    },
                    "src": "1469:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 52,
                  "nodeType": "ExpressionStatement",
                  "src": "1469:28:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 57,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 53,
                        "name": "gs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "1597:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GovernanceStorage_$3660_storage_ptr",
                          "typeString": "struct GovernanceStorageContract.GovernanceStorage storage pointer"
                        }
                      },
                      "id": 55,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "voterAwardDivisor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3657,
                      "src": "1597:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "313030",
                      "id": 56,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1620:3:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "1597:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 58,
                  "nodeType": "ExpressionStatement",
                  "src": "1597:26:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 59,
                        "name": "gs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "1784:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GovernanceStorage_$3660_storage_ptr",
                          "typeString": "struct GovernanceStorageContract.GovernanceStorage storage pointer"
                        }
                      },
                      "id": 61,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "voteAwardCapDivisor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3659,
                      "src": "1784:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "3230",
                      "id": 62,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1809:2:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_20_by_1",
                        "typeString": "int_const 20"
                      },
                      "value": "20"
                    },
                    "src": "1784:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 64,
                  "nodeType": "ExpressionStatement",
                  "src": "1784:27:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 69,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 65,
                        "name": "gs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "1887:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GovernanceStorage_$3660_storage_ptr",
                          "typeString": "struct GovernanceStorageContract.GovernanceStorage storage pointer"
                        }
                      },
                      "id": 67,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "minimumVotingTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3649,
                      "src": "1887:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "3438",
                      "id": 68,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1910:2:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_48_by_1",
                        "typeString": "int_const 48"
                      },
                      "value": "48"
                    },
                    "src": "1887:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 70,
                  "nodeType": "ExpressionStatement",
                  "src": "1887:25:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 75,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 71,
                        "name": "gs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "2003:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GovernanceStorage_$3660_storage_ptr",
                          "typeString": "struct GovernanceStorageContract.GovernanceStorage storage pointer"
                        }
                      },
                      "id": 73,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "maximumVotingTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3651,
                      "src": "2003:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "333336",
                      "id": 74,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2026:3:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_336_by_1",
                        "typeString": "int_const 336"
                      },
                      "value": "336"
                    },
                    "src": "2003:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 76,
                  "nodeType": "ExpressionStatement",
                  "src": "2003:26:0"
                },
                {
                  "assignments": [
                    78
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 78,
                      "mutability": "mutable",
                      "name": "diamondLoupe",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 244,
                      "src": "2135:25:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DiamondLoupe_$1301",
                        "typeString": "contract DiamondLoupe"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 77,
                        "name": "DiamondLoupe",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1301,
                        "src": "2135:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DiamondLoupe_$1301",
                          "typeString": "contract DiamondLoupe"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 82,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 80,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2163:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_DiamondLoupe_$1301_$",
                        "typeString": "function () returns (contract DiamondLoupe)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 79,
                        "name": "DiamondLoupe",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1301,
                        "src": "2167:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DiamondLoupe_$1301",
                          "typeString": "contract DiamondLoupe"
                        }
                      }
                    },
                    "id": 81,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2163:18:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DiamondLoupe_$1301",
                      "typeString": "contract DiamondLoupe"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2135:46:0"
                },
                {
                  "assignments": [
                    84
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 84,
                      "mutability": "mutable",
                      "name": "erc20Token",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 244,
                      "src": "2195:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Token_$1779",
                        "typeString": "contract ERC20Token"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 83,
                        "name": "ERC20Token",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1779,
                        "src": "2195:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Token_$1779",
                          "typeString": "contract ERC20Token"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 88,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 86,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2219:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_ERC20Token_$1779_$",
                        "typeString": "function () returns (contract ERC20Token)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 85,
                        "name": "ERC20Token",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1779,
                        "src": "2223:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Token_$1779",
                          "typeString": "contract ERC20Token"
                        }
                      }
                    },
                    "id": 87,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2219:16:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Token_$1779",
                      "typeString": "contract ERC20Token"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2195:40:0"
                },
                {
                  "assignments": [
                    90
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 90,
                      "mutability": "mutable",
                      "name": "governance",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 244,
                      "src": "2246:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Governance_$2779",
                        "typeString": "contract Governance"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 89,
                        "name": "Governance",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2779,
                        "src": "2246:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Governance_$2779",
                          "typeString": "contract Governance"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 94,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 92,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2270:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Governance_$2779_$",
                        "typeString": "function () returns (contract Governance)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 91,
                        "name": "Governance",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2779,
                        "src": "2274:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Governance_$2779",
                          "typeString": "contract Governance"
                        }
                      }
                    },
                    "id": 93,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2270:16:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Governance_$2779",
                      "typeString": "contract Governance"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2246:40:0"
                },
                {
                  "assignments": [
                    99
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 99,
                      "mutability": "mutable",
                      "name": "cut",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 244,
                      "src": "2299:18:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                        "typeString": "bytes[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 97,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2299:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 98,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "2299:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 105,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "33",
                        "id": 103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2332:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "id": 102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2320:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 100,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2324:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 101,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "2324:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      }
                    },
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2320:14:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2299:35:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 106,
                        "name": "cut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99,
                        "src": "2414:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      "id": 108,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2418:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2414:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 111,
                          "name": "diamondLoupe",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "2454:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_DiamondLoupe_$1301",
                            "typeString": "contract DiamondLoupe"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 112,
                              "name": "IDiamondLoupe",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2828,
                              "src": "2481:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IDiamondLoupe_$2828_$",
                                "typeString": "type(contract IDiamondLoupe)"
                              }
                            },
                            "id": 113,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "facetFunctionSelectors",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2813,
                            "src": "2481:36:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_declaration_view$_t_address_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function IDiamondLoupe.facetFunctionSelectors(address) view returns (bytes memory)"
                            }
                          },
                          "id": 114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2481:45:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 115,
                              "name": "IDiamondLoupe",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2828,
                              "src": "2541:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IDiamondLoupe_$2828_$",
                                "typeString": "type(contract IDiamondLoupe)"
                              }
                            },
                            "id": 116,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "facets",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2805,
                            "src": "2541:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_declaration_view$__$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "function IDiamondLoupe.facets() view returns (bytes memory[] memory)"
                            }
                          },
                          "id": 117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2541:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 118,
                              "name": "IDiamondLoupe",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2828,
                              "src": "2585:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IDiamondLoupe_$2828_$",
                                "typeString": "type(contract IDiamondLoupe)"
                              }
                            },
                            "id": 119,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "facetAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2827,
                            "src": "2585:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_declaration_view$_t_bytes4_$returns$_t_address_$",
                              "typeString": "function IDiamondLoupe.facetAddress(bytes4) view returns (address)"
                            }
                          },
                          "id": 120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2585:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 121,
                              "name": "IDiamondLoupe",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2828,
                              "src": "2635:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IDiamondLoupe_$2828_$",
                                "typeString": "type(contract IDiamondLoupe)"
                              }
                            },
                            "id": 122,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "facetAddresses",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2819,
                            "src": "2635:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_declaration_view$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function IDiamondLoupe.facetAddresses() view returns (bytes memory)"
                            }
                          },
                          "id": 123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2635:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 124,
                              "name": "IERC165",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2839,
                              "src": "2687:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC165_$2839_$",
                                "typeString": "type(contract IERC165)"
                              }
                            },
                            "id": 125,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "supportsInterface",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2838,
                            "src": "2687:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_declaration_view$_t_bytes4_$returns$_t_bool_$",
                              "typeString": "function IERC165.supportsInterface(bytes4) view returns (bool)"
                            }
                          },
                          "id": 126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2687:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_DiamondLoupe_$1301",
                            "typeString": "contract DiamondLoupe"
                          },
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 109,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "2423:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "encodePacked",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2423:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2423:321:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "2414:330:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 129,
                  "nodeType": "ExpressionStatement",
                  "src": "2414:330:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 130,
                        "name": "cut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99,
                        "src": "2757:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      "id": 132,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2761:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2757:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 135,
                          "name": "erc20Token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 84,
                          "src": "2797:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Token_$1779",
                            "typeString": "contract ERC20Token"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 136,
                              "name": "ERC20Token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1779,
                              "src": "2822:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC20Token_$1779_$",
                                "typeString": "type(contract ERC20Token)"
                              }
                            },
                            "id": 137,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "name",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1320,
                            "src": "2822:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_declaration_pure$__$returns$_t_string_memory_ptr_$",
                              "typeString": "function ERC20Token.name() pure returns (string memory)"
                            }
                          },
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2822:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 139,
                              "name": "ERC20Token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1779,
                              "src": "2861:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC20Token_$1779_$",
                                "typeString": "type(contract ERC20Token)"
                              }
                            },
                            "id": 140,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "symbol",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1329,
                            "src": "2861:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_declaration_pure$__$returns$_t_string_memory_ptr_$",
                              "typeString": "function ERC20Token.symbol() pure returns (string memory)"
                            }
                          },
                          "id": 141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2861:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 142,
                              "name": "ERC20Token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1779,
                              "src": "2902:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC20Token_$1779_$",
                                "typeString": "type(contract ERC20Token)"
                              }
                            },
                            "id": 143,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "decimals",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1338,
                            "src": "2902:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_declaration_pure$__$returns$_t_uint8_$",
                              "typeString": "function ERC20Token.decimals() pure returns (uint8)"
                            }
                          },
                          "id": 144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2902:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 145,
                              "name": "ERC20Token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1779,
                              "src": "2945:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC20Token_$1779_$",
                                "typeString": "type(contract ERC20Token)"
                              }
                            },
                            "id": 146,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "totalSupply",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1349,
                            "src": "2945:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_declaration_view$__$returns$_t_uint256_$",
                              "typeString": "function ERC20Token.totalSupply() view returns (uint256)"
                            }
                          },
                          "id": 147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2945:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 148,
                              "name": "ERC20Token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1779,
                              "src": "2991:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC20Token_$1779_$",
                                "typeString": "type(contract ERC20Token)"
                              }
                            },
                            "id": 149,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1370,
                            "src": "2991:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_declaration_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function ERC20Token.balanceOf(address) view returns (uint256)"
                            }
                          },
                          "id": 150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2991:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 151,
                              "name": "ERC20Token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1779,
                              "src": "3035:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC20Token_$1779_$",
                                "typeString": "type(contract ERC20Token)"
                              }
                            },
                            "id": 152,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1392,
                            "src": "3035:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function ERC20Token.transfer(address,uint256) returns (bool)"
                            }
                          },
                          "id": 153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3035:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 154,
                              "name": "ERC20Token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1779,
                              "src": "3078:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC20Token_$1779_$",
                                "typeString": "type(contract ERC20Token)"
                              }
                            },
                            "id": 155,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1478,
                            "src": "3078:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function ERC20Token.transferFrom(address,address,uint256) returns (bool)"
                            }
                          },
                          "id": 156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3078:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 157,
                              "name": "ERC20Token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1779,
                              "src": "3125:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC20Token_$1779_$",
                                "typeString": "type(contract ERC20Token)"
                              }
                            },
                            "id": 158,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "approve",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1629,
                            "src": "3125:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function ERC20Token.approve(address,uint256) returns (bool)"
                            }
                          },
                          "id": 159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3125:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 160,
                              "name": "ERC20Token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1779,
                              "src": "3167:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC20Token_$1779_$",
                                "typeString": "type(contract ERC20Token)"
                              }
                            },
                            "id": 161,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1650,
                            "src": "3167:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_declaration_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function ERC20Token.allowance(address,address) view returns (uint256)"
                            }
                          },
                          "id": 162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3167:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 163,
                              "name": "ERC20Token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1779,
                              "src": "3211:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC20Token_$1779_$",
                                "typeString": "type(contract ERC20Token)"
                              }
                            },
                            "id": 164,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "increaseAllowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1714,
                            "src": "3211:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function ERC20Token.increaseAllowance(address,uint256) returns (bool)"
                            }
                          },
                          "id": 165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3211:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 166,
                              "name": "ERC20Token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1779,
                              "src": "3263:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC20Token_$1779_$",
                                "typeString": "type(contract ERC20Token)"
                              }
                            },
                            "id": 167,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "decreaseAllowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1778,
                            "src": "3263:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function ERC20Token.decreaseAllowance(address,uint256) returns (bool)"
                            }
                          },
                          "id": 168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3263:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20Token_$1779",
                            "typeString": "contract ERC20Token"
                          },
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 133,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "2766:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "encodePacked",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2766:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 169,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2766:545:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "2757:554:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 171,
                  "nodeType": "ExpressionStatement",
                  "src": "2757:554:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 172,
                        "name": "cut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99,
                        "src": "3324:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      "id": 174,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3328:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3324:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 177,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 90,
                          "src": "3364:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Governance_$2779",
                            "typeString": "contract Governance"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 178,
                              "name": "Governance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2779,
                              "src": "3389:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Governance_$2779_$",
                                "typeString": "type(contract Governance)"
                              }
                            },
                            "id": 179,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "propose",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2005,
                            "src": "3389:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function Governance.propose(address,uint256) returns (uint256)"
                            }
                          },
                          "id": 180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3389:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 181,
                              "name": "Governance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2779,
                              "src": "3431:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Governance_$2779_$",
                                "typeString": "type(contract Governance)"
                              }
                            },
                            "id": 182,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "executeProposal",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2239,
                            "src": "3431:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_declaration_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function Governance.executeProposal(uint256)"
                            }
                          },
                          "id": 183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3431:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 184,
                              "name": "Governance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2779,
                              "src": "3481:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Governance_$2779_$",
                                "typeString": "type(contract Governance)"
                              }
                            },
                            "id": 185,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "proposalStatus",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2358,
                            "src": "3481:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_declaration_view$_t_uint256_$returns$_t_enum$_ProposalStatus_$2247_$",
                              "typeString": "function Governance.proposalStatus(uint256) view returns (enum Governance.ProposalStatus)"
                            }
                          },
                          "id": 186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3481:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 187,
                              "name": "Governance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2779,
                              "src": "3530:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Governance_$2779_$",
                                "typeString": "type(contract Governance)"
                              }
                            },
                            "id": 188,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "proposal",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2409,
                            "src": "3530:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_declaration_view$_t_uint256_$returns$_t_struct$_RetrievedProposal_$2371_memory_ptr_$",
                              "typeString": "function Governance.proposal(uint256) view returns (struct Governance.RetrievedProposal memory)"
                            }
                          },
                          "id": 189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3530:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 190,
                              "name": "Governance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2779,
                              "src": "3573:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Governance_$2779_$",
                                "typeString": "type(contract Governance)"
                              }
                            },
                            "id": 191,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "vote",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2581,
                            "src": "3573:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_declaration_nonpayable$_t_uint256_$_t_bool_$returns$__$",
                              "typeString": "function Governance.vote(uint256,bool)"
                            }
                          },
                          "id": 192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3573:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 193,
                              "name": "Governance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2779,
                              "src": "3612:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Governance_$2779_$",
                                "typeString": "type(contract Governance)"
                              }
                            },
                            "id": 194,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "unvote",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2778,
                            "src": "3612:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_declaration_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function Governance.unvote(uint256)"
                            }
                          },
                          "id": 195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3612:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Governance_$2779",
                            "typeString": "contract Governance"
                          },
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 175,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "3333:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "encodePacked",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3333:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3333:316:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "3324:325:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 198,
                  "nodeType": "ExpressionStatement",
                  "src": "3324:325:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 200,
                        "name": "cut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99,
                        "src": "3681:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      ],
                      "id": 199,
                      "name": "diamondCut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3473,
                      "src": "3670:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory[] memory)"
                      }
                    },
                    "id": 201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3670:15:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 202,
                  "nodeType": "ExpressionStatement",
                  "src": "3670:15:0"
                },
                {
                  "assignments": [
                    204
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 204,
                      "mutability": "mutable",
                      "name": "ds",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 244,
                      "src": "3737:25:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DiamondStorage_$3557_storage_ptr",
                        "typeString": "struct DiamondStorageContract.DiamondStorage"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 203,
                        "name": "DiamondStorage",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 3557,
                        "src": "3737:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DiamondStorage_$3557_storage_ptr",
                          "typeString": "struct DiamondStorageContract.DiamondStorage"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 207,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 205,
                      "name": "diamondStorage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3568,
                      "src": "3765:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$3557_storage_ptr_$",
                        "typeString": "function () pure returns (struct DiamondStorageContract.DiamondStorage storage pointer)"
                      }
                    },
                    "id": 206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3765:16:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DiamondStorage_$3557_storage_ptr",
                      "typeString": "struct DiamondStorageContract.DiamondStorage storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3737:44:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 208,
                          "name": "ds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 204,
                          "src": "3792:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DiamondStorage_$3557_storage_ptr",
                            "typeString": "struct DiamondStorageContract.DiamondStorage storage pointer"
                          }
                        },
                        "id": 213,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportedInterfaces",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3546,
                        "src": "3792:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
                          "typeString": "mapping(bytes4 => bool)"
                        }
                      },
                      "id": 214,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 210,
                            "name": "IERC165",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2839,
                            "src": "3815:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC165_$2839_$",
                              "typeString": "type(contract IERC165)"
                            }
                          },
                          "id": 211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "supportsInterface",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2838,
                          "src": "3815:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_declaration_view$_t_bytes4_$returns$_t_bool_$",
                            "typeString": "function IERC165.supportsInterface(bytes4) view returns (bool)"
                          }
                        },
                        "id": 212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3815:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3792:58:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 215,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3853:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3792:65:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 217,
                  "nodeType": "ExpressionStatement",
                  "src": "3792:65:0"
                },
                {
                  "assignments": [
                    219
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 219,
                      "mutability": "mutable",
                      "name": "interfaceID",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 244,
                      "src": "3876:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "typeName": {
                        "id": 218,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "3876:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 235,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    },
                    "id": 234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 220,
                              "name": "IDiamondLoupe",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2828,
                              "src": "3897:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IDiamondLoupe_$2828_$",
                                "typeString": "type(contract IDiamondLoupe)"
                              }
                            },
                            "id": 221,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "facets",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2805,
                            "src": "3897:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_declaration_view$__$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "function IDiamondLoupe.facets() view returns (bytes memory[] memory)"
                            }
                          },
                          "id": 222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3897:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "^",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 223,
                              "name": "IDiamondLoupe",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2828,
                              "src": "3929:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IDiamondLoupe_$2828_$",
                                "typeString": "type(contract IDiamondLoupe)"
                              }
                            },
                            "id": 224,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "facetFunctionSelectors",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2813,
                            "src": "3929:36:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_declaration_view$_t_address_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function IDiamondLoupe.facetFunctionSelectors(address) view returns (bytes memory)"
                            }
                          },
                          "id": 225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3929:45:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "3897:77:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "^",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 227,
                            "name": "IDiamondLoupe",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2828,
                            "src": "3977:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IDiamondLoupe_$2828_$",
                              "typeString": "type(contract IDiamondLoupe)"
                            }
                          },
                          "id": 228,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "facetAddresses",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2819,
                          "src": "3977:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_declaration_view$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function IDiamondLoupe.facetAddresses() view returns (bytes memory)"
                          }
                        },
                        "id": 229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3977:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "3897:117:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "^",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 231,
                          "name": "IDiamondLoupe",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2828,
                          "src": "4017:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IDiamondLoupe_$2828_$",
                            "typeString": "type(contract IDiamondLoupe)"
                          }
                        },
                        "id": 232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "facetAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2827,
                        "src": "4017:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_declaration_view$_t_bytes4_$returns$_t_address_$",
                          "typeString": "function IDiamondLoupe.facetAddress(bytes4) view returns (address)"
                        }
                      },
                      "id": 233,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4017:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "3897:155:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3876:176:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 236,
                          "name": "ds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 204,
                          "src": "4063:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DiamondStorage_$3557_storage_ptr",
                            "typeString": "struct DiamondStorageContract.DiamondStorage storage pointer"
                          }
                        },
                        "id": 239,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportedInterfaces",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3546,
                        "src": "4063:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
                          "typeString": "mapping(bytes4 => bool)"
                        }
                      },
                      "id": 240,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 238,
                        "name": "interfaceID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 219,
                        "src": "4086:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4063:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4101:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4063:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 243,
                  "nodeType": "ExpressionStatement",
                  "src": "4063:42:0"
                }
              ]
            },
            "documentation": null,
            "id": 245,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "903:2:0"
            },
            "returnParameters": {
              "id": 21,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "906:0:0"
            },
            "scope": 288,
            "src": "892:3221:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 282,
              "nodeType": "Block",
              "src": "4271:703:0",
              "statements": [
                {
                  "assignments": [
                    249
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 249,
                      "mutability": "mutable",
                      "name": "ds",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 282,
                      "src": "4290:25:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DiamondStorage_$3557_storage_ptr",
                        "typeString": "struct DiamondStorageContract.DiamondStorage"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 248,
                        "name": "DiamondStorage",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 3557,
                        "src": "4290:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DiamondStorage_$3557_storage_ptr",
                          "typeString": "struct DiamondStorageContract.DiamondStorage"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 250,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4290:25:0"
                },
                {
                  "assignments": [
                    252
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 252,
                      "mutability": "mutable",
                      "name": "position",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 282,
                      "src": "4326:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 251,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4326:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 255,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 253,
                      "name": "DiamondStorageContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3569,
                      "src": "4345:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_DiamondStorageContract_$3569_$",
                        "typeString": "type(contract DiamondStorageContract)"
                      }
                    },
                    "id": 254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "DIAMOND_STORAGE_POSITION",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 3542,
                    "src": "4345:47:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4326:66:0"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "4423:23:0",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "4425:19:0",
                        "value": {
                          "name": "position",
                          "nodeType": "YulIdentifier",
                          "src": "4436:8:0"
                        },
                        "variableNames": [
                          {
                            "name": "ds.slot",
                            "nodeType": "YulIdentifier",
                            "src": "4425:7:0"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 249,
                      "isOffset": false,
                      "isSlot": true,
                      "src": "4425:7:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 252,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "4436:8:0",
                      "valueSize": 1
                    }
                  ],
                  "id": 256,
                  "nodeType": "InlineAssembly",
                  "src": "4414:32:0"
                },
                {
                  "assignments": [
                    258
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 258,
                      "mutability": "mutable",
                      "name": "facet",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 282,
                      "src": "4456:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 257,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4456:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 270,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 263,
                                "name": "ds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 249,
                                "src": "4488:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_DiamondStorage_$3557_storage_ptr",
                                  "typeString": "struct DiamondStorageContract.DiamondStorage storage pointer"
                                }
                              },
                              "id": 264,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "facets",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3550,
                              "src": "4488:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes4_$_t_bytes32_$",
                                "typeString": "mapping(bytes4 => bytes32)"
                              }
                            },
                            "id": 267,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 265,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4498:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 266,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sig",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "4498:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4488:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4480:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes20_$",
                            "typeString": "type(bytes20)"
                          },
                          "typeName": {
                            "id": 261,
                            "name": "bytes20",
                            "nodeType": "ElementaryTypeName",
                            "src": "4480:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4480:27:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes20",
                          "typeString": "bytes20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes20",
                          "typeString": "bytes20"
                        }
                      ],
                      "id": 260,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4472:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 259,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4472:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4472:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4456:52:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 272,
                          "name": "facet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 258,
                          "src": "4527:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 275,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4544:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 274,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4536:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 273,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4536:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4536:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "4527:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "46756e6374696f6e20646f6573206e6f742065786973742e",
                        "id": 278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4548:26:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0fa78a13653e06ad99b0fd069a1f00be9aaee42e8019fef06fc5450b72e1b65e",
                          "typeString": "literal_string \"Function does not exist.\""
                        },
                        "value": "Function does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0fa78a13653e06ad99b0fd069a1f00be9aaee42e8019fef06fc5450b72e1b65e",
                          "typeString": "literal_string \"Function does not exist.\""
                        }
                      ],
                      "id": 271,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4519:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4519:56:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 280,
                  "nodeType": "ExpressionStatement",
                  "src": "4519:56:0"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "4595:372:0",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "4610:22:0",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4627:4:0",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "4621:5:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4621:11:0"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "4614:3:0",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "4659:3:0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4664:1:0",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "calldatasize",
                                "nodeType": "YulIdentifier",
                                "src": "4667:12:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4667:14:0"
                            }
                          ],
                          "functionName": {
                            "name": "calldatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "4646:12:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4646:36:0"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4646:36:0"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "4696:67:0",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "gas",
                                "nodeType": "YulIdentifier",
                                "src": "4723:3:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4723:5:0"
                            },
                            {
                              "name": "facet",
                              "nodeType": "YulIdentifier",
                              "src": "4730:5:0"
                            },
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "4737:3:0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "calldatasize",
                                "nodeType": "YulIdentifier",
                                "src": "4742:12:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4742:14:0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4758:1:0",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4761:1:0",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "delegatecall",
                            "nodeType": "YulIdentifier",
                            "src": "4710:12:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4710:53:0"
                        },
                        "variables": [
                          {
                            "name": "result",
                            "nodeType": "YulTypedName",
                            "src": "4700:6:0",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "4777:28:0",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "4789:14:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4789:16:0"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "4781:4:0",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "4834:3:0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4839:1:0",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "4842:4:0"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "4819:14:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4819:28:0"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4819:28:0"
                      },
                      {
                        "cases": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "4895:19:0",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "4903:3:0"
                                      },
                                      {
                                        "name": "size",
                                        "nodeType": "YulIdentifier",
                                        "src": "4908:4:0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "revert",
                                      "nodeType": "YulIdentifier",
                                      "src": "4896:6:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4896:17:0"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "4896:17:0"
                                }
                              ]
                            },
                            "nodeType": "YulCase",
                            "src": "4888:26:0",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4893:1:0",
                              "type": "",
                              "value": "0"
                            }
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "4936:20:0",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "4945:3:0"
                                      },
                                      {
                                        "name": "size",
                                        "nodeType": "YulIdentifier",
                                        "src": "4950:4:0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "return",
                                      "nodeType": "YulIdentifier",
                                      "src": "4937:6:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4937:18:0"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "4937:18:0"
                                }
                              ]
                            },
                            "nodeType": "YulCase",
                            "src": "4928:28:0",
                            "value": "default"
                          }
                        ],
                        "expression": {
                          "name": "result",
                          "nodeType": "YulIdentifier",
                          "src": "4868:6:0"
                        },
                        "nodeType": "YulSwitch",
                        "src": "4861:95:0"
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 258,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "4730:5:0",
                      "valueSize": 1
                    }
                  ],
                  "id": 281,
                  "nodeType": "InlineAssembly",
                  "src": "4586:381:0"
                }
              ]
            },
            "documentation": null,
            "id": 283,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 246,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4251:2:0"
            },
            "returnParameters": {
              "id": 247,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4271:0:0"
            },
            "scope": 288,
            "src": "4243:731:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 286,
              "nodeType": "Block",
              "src": "5009:8:0",
              "statements": []
            },
            "documentation": null,
            "id": 287,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 284,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4989:2:0"
            },
            "returnParameters": {
              "id": 285,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5009:0:0"
            },
            "scope": 288,
            "src": "4982:35:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 289,
        "src": "824:4196:0"
      }
    ],
    "src": "33:4991:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.0+commit.9e61f92b.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.1.0",
  "updatedAt": "2020-08-09T20:02:25.329Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}